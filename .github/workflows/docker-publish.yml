name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: velcom-server
  UID: 1003

jobs:
  # Runs the build.
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: "Install make"
        run: "sudo apt update && sudo apt install make -y"
      - name: "Build frontend"
        run: "make frontend mode=production-single-port"
      - name: "Build backend"
        run: "make backend"
      - name: "Upload frontend artifacts"
        uses: actions/upload-artifact@v1
        with:
          name: frontend-artifacts
          path: frontend/dist
      - name: "Upload backend artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifacts
          path: "backend/**/target/{backend, runner}.jar"


  # Push image to GitHub Packages.
  push:
    # Ensure build job passes before pushing image.
    needs: [build]

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      # SETUP
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      # CACHE
      - name: "Download frontend artifacts"
        uses: actions/download-artifact@v1
        with:
          name: frontend-artifacts
      - name: "Download backend artifacts"
        uses: actions/download-artifact@v2
        with:
          name: backend-artifacts

      # BUILDING
      - name: "Build image"
        run: "make docker-build-server-single-port USER_ID=$UID"

      - name: "Log into registry"
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
